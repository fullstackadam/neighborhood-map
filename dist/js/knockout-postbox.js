
;(function(factory){if(typeof require==="function"&&typeof exports==="object"&&typeof module==="object"){factory(require("knockout"),exports);}else if(typeof define==="function"&&define.amd){define(["knockout","exports"],factory);}else{factory(ko,ko.postbox={});}}(function(ko,exports,undefined){var disposeTopicSubscription,ensureDispose,existingSubscribe,subscriptions={},subId=1;exports.subscriptions=subscriptions;ko.subscribable.call(exports);exports.topicCache={};exports.serializer=ko.toJSON;exports.publish=function(topic,value){if(topic){exports.topicCache[topic]={value:value,serialized:exports.serializer(value)};exports.notifySubscribers(value,topic);}};existingSubscribe=exports.subscribe;exports.subscribe=function(topic,action,target,initializeWithLatestValue){var subscription,current,existingDispose;if(topic){if(typeof target==="boolean"){initializeWithLatestValue=target;target=undefined;}
subscription=existingSubscribe.call(exports,action,target,topic);subscription.subId=++subId;subscriptions[subId]=subscription;if(initializeWithLatestValue){current=exports.topicCache[topic];if(current!==undefined){action.call(target,current.value);}}
existingDispose=subscription.dispose;subscription.dispose=function(){delete subscriptions[subscription.subId];existingDispose.call(subscription);};return subscription;}};exports.reset=function(){var subscription;for(var id in subscriptions){if(subscriptions.hasOwnProperty(id)){subscription=subscriptions[id];if(subscription&&typeof subscription.dispose==="function"){subscription.dispose();}}}
exports.topicCache={};};exports.defaultComparer=function(newValue,cacheItem){return cacheItem&&exports.serializer(newValue)===cacheItem.serialized;};ensureDispose=function(){var existingDispose,self=this;if(!self.willDisposePostbox){self.willDisposePostbox=true;existingDispose=self.dispose;self.dispose=function(){var topic,types,type,sub,subs=self.postboxSubs;if(subs){for(topic in subs){if(subs.hasOwnProperty(topic)){types=subs[topic];if(types){for(type in types){if(types.hasOwnProperty(type)){sub=types[type];if(sub&&typeof sub.dispose=="function"){sub.dispose();}}}}}}}
if(existingDispose){existingDispose.call(self);}};}};ko.subscribable.fn.publishOn=function(topic,skipInitialOrEqualityComparer,equalityComparer){var skipInitialPublish,subscription,existingDispose;ensureDispose.call(this);if(topic){if(typeof skipInitialOrEqualityComparer==="function"){equalityComparer=skipInitialOrEqualityComparer;}else{skipInitialPublish=skipInitialOrEqualityComparer;}
equalityComparer=equalityComparer||exports.defaultComparer;disposeTopicSubscription.call(this,topic,"publishOn");subscription=this.subscribe(function(newValue){if(!equalityComparer.call(this,newValue,exports.topicCache[topic])){exports.publish(topic,newValue);}},this);subscription.id=++subId;subscriptions[subId]=subscription;existingDispose=subscription.dispose;subscription.dispose=function(){delete this.postboxSubs[topic].publishOn;delete subscriptions[subscription.id];existingDispose.call(subscription);}.bind(this);this.postboxSubs[topic].publishOn=subscription;if(!skipInitialPublish){exports.publish(topic,this());}}
return this;};disposeTopicSubscription=function(topic,type){var subs=this.postboxSubs=this.postboxSubs||{};subs[topic]=subs[topic]||{};if(subs[topic][type]){subs[topic][type].dispose();}};ko.subscribable.fn.stopPublishingOn=function(topic){disposeTopicSubscription.call(this,topic,"publishOn");return this;};ko.subscribable.fn.subscribeTo=function(topic,initializeWithLatestValueOrTransform,transform){var initializeWithLatestValue,current,callback,subscription,existingDispose,self=this;ensureDispose.call(this);if(typeof initializeWithLatestValueOrTransform==="function"){transform=initializeWithLatestValueOrTransform;}else{initializeWithLatestValue=initializeWithLatestValueOrTransform;}
if(topic&&ko.isWriteableObservable(this)){disposeTopicSubscription.call(this,topic,"subscribeTo");callback=function(newValue){self(transform?transform.call(self,newValue):newValue);};subscription=exports.subscribe(topic,callback);this.postboxSubs[topic].subscribeTo=subscription;existingDispose=subscription.dispose;subscription.dispose=function(){delete this.postboxSubs[topic].subscribeTo;existingDispose.call(subscription);}.bind(this);if(initializeWithLatestValue){current=exports.topicCache[topic];if(current!==undefined){callback(current.value);}}}
return this;};ko.subscribable.fn.unsubscribeFrom=function(topic){disposeTopicSubscription.call(this,topic,"subscribeTo");return this;};ko.subscribable.fn.syncWith=function(topic,initializeWithLatestValue,skipInitialOrEqualityComparer,equalityComparer){this.subscribeTo(topic,initializeWithLatestValue).publishOn(topic,skipInitialOrEqualityComparer,equalityComparer);return this;};ko.subscribable.fn.stopSyncingWith=function(topic){this.unsubscribeFrom(topic).stopPublishingOn(topic);return this;};ko.postbox=exports;}));